#  run this playbook as root
- name: Ansible playbook to setup Ubuntu
  hosts: localhost
  connection: local
  become: true
  remote_user: root

  tasks:
    - name: Allow the eapreko user to run sudo without requiring a password
      community.general.sudoers:
        name: eapreko-sudo
        state: present
        user: eapreko
        commands: ALL
        nopassword: true
        sudoers_path: "/etc/sudoers.d"
        setenv: true
        validation: "detect"
      tags: no_sudo

    - name: Set the timezone to Europe/London
      community.general.timezone:
        name: Europe/London

    - name: Change the system hostname
      tags:
        hostname
      ansible.builtin.hostname:
        name: eapreko-J00634

    - name: Restart cron daemon
      ansible.builtin.service:
        name: cron
        state: "restarted"

    - name: Install gnome tweak tool and chrome-gnome-shell
      tags:
        gnome_tweaks
      ansible.builtin.apt:
        name:
          - gnome-tweaks
          - gnome-shell-extensions
          - chrome-gnome-shell
        state: present

    - name: Install gnome shell extensions manager
      tags:
        gnome_shell_extensions
      ansible.builtin.apt:
        name:
          - gnome-shell-extension-manager
        state: present

    - name: Install packages
      ansible.builtin.package:
        name:
          - python3-pydrive #  python3-pydrive for backups
          - jq  #  json requirements
          - wireguard-tools #  required for pritunl vpn client
          - gnome-sushi #  for spacebar preview
          - flameshot #  for screenshots
          - htop #  for system monitoring
          - git-extras #  for git
          - terminator  #  for terminal
          - python3-pip #  for python packages
          - git # for version control
          - xclip #  for clipboard
          - curl #  for downloading files
          - deja-dup #  for backups
        state: present

    - name: Install github-cli
      tags:
        github_cli
      ansible.builtin.shell: |
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
        sudo apt-add-repository https://cli.github.com/packages
        sudo apt update
        sudo apt install gh

    - name: Install WPS Office software
      ansible.builtin.apt:
        deb: https://wdl1.pcfg.cache.wpscdn.com/wpsdl/wpsoffice/download/linux/11664/wps-office_11.1.0.11664.XA_amd64.deb
        state: present

    - name: Install pritunl vpn client
      ansible.builtin.shell: |
        sudo tee /etc/apt/sources.list.d/pritunl.list << EOF
        deb https://repo.pritunl.com/stable/apt jammy main
        EOF
        sudo apt --assume-yes install gnupg
        gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys 7568D9BB55FF9E5287D586017AE645C0CF8E292A
        gpg --armor --export 7568D9BB55FF9E5287D586017AE645C0CF8E292A | sudo tee /etc/apt/trusted.gpg.d/pritunl.asc
        sudo apt update
        sudo apt install -y pritunl-client-electron

    - name: Bash - Log commands
      ansible.builtin.lineinfile:
        path: /etc/bash.bashrc
        regexp: Log Bash commands
        line: |
          export PROMPT_COMMAND='RETRN_VAL=$?;logger -p local6.debug "$(whoami) [$$]: $(history 1 | sed "s/^[ ]*[0-9]\+[ ]*//" ) [$RETRN_VAL]" # Added by Ansible Log Bash commands'

    - name: Bash - Add date and time to history
      ansible.builtin.copy:
        content: "export HISTTIMEFORMAT=\"%F %T \"\n"
        dest: /etc/profile.d/history.sh
        mode: '0644'
      tags:
        bash_history

    - name: Install ggshield
      ansible.builtin.shell: |
        curl -1sLf \
          'https://dl.cloudsmith.io/public/gitguardian/ggshield/setup.deb.sh' \
          | sudo -E bash
        sudo apt install ggshield -y

    - name: Enable ggshield global pre-commit hook
      ansible.builtin.command: "ggshield install --mode global"

    - name: Install Jumpcloud powershell module
      ansible.builtin.shell: |
        # Install pre-requisite packages.
        sudo apt-get install -y wget apt-transport-https software-properties-common
        # Download the Microsoft repository GPG keys
        wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb"
        # Register the Microsoft repository GPG keys
        sudo dpkg -i packages-microsoft-prod.deb
        # Delete the the Microsoft repository GPG keys file
        rm packages-microsoft-prod.deb
        # Update the list of packages after we added packages.microsoft.com
        sudo apt-get update
        # Install PowerShell
        sudo apt-get install -y powershell
    
    # Automate Ubuntu 22.04 service restart after app update 
    # Uncomment, find and replace letter i with letter a if line contains #$nrconf{restart}
#    - name: Update needrestart.conf file
#      become: true
#      lineinfile:
#        path: /etc/needrestart/needrestart.conf
#        regexp: '^#$nrconf{restart}'
#        line: "$nrconf{restart} = 'a'"
#        backup: yes

    - name: Update the OS with latest patches and Prerequisites
      ansible.builtin.apt:
        update_cache: yes
        upgrade: 'yes'
  
    - name: Download Termius, VSCode and Google Chrome
      block:
        - name: Termius, VSCode and Google Chrome - Check if files exist
          stat:
            path: "{{ item.dest }}"
          register: result
          loop:
            - { url: 'https://www.termius.com/download/linux/Termius.deb', dest: '/tmp/Termius.deb' }
            - { url: 'https://go.microsoft.com/fwlink/?LinkID=760868', dest: '/tmp/vscode.deb' }
            - { url: 'https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb', dest: '/tmp/google-chrome-stable_current_amd64.deb' }

        - name: Termius, VSCode and Google Chrome - Download files
          when: item.stat.exists == False
          ansible.builtin.get_url:
            url: "{{ item.item.url }}"
            dest: "{{ item.item.dest }}"
          loop: "{{ result.results }}"
      
        - name: Termius, VSCode and Google Chrome - Install packages
          ansible.builtin.apt:
            deb: "/tmp/{{ item }}"
          loop:
            - 'Termius.deb'
            - 'vscode.deb'
            - 'google-chrome-stable_current_amd64.deb'

        - name: Termius, VSCode and Google Chrome - Delete installation files
          file:
            path: "/tmp/{{ item }}"
            state: absent
          loop:
            - 'Termius.deb'
            - 'vscode.deb'
            - 'google-chrome-stable_current_amd64.deb'

      tags:
        termius_vscode_chrome

    - name: Install aws-cli
      tags:
        aws_cli
      block:
        - name: Download aws-cli
          ansible.builtin.unarchive:
            src: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
            dest: /tmp
            remote_src: true

        - name: Install aws-cli
          ansible.builtin.command: sudo /tmp/aws/install

        - name: Delete aws-cli installation files
          ansible.builtin.file:
            path: "/tmp/{{ item }}"
            state: absent
          loop:
            - 'awscli-exe-linux-x86_64.zip'
            - 'aws'

    - name: Install Docker
      tags:
        docker
      block:
        - name: Install Docker Prerequisites
          ansible.builtin.apt:
            name: "{{ item }}"
            state: present
          loop:
            - apt-transport-https
            - ca-certificates
            - curl
            - gnupg
            - lsb-release

        - name: Add Docker's GPG key
          ansible.builtin.get_url:
            url: https://download.docker.com/linux/ubuntu/gpg
            dest: /etc/apt/keyrings/docker.asc
            mode: '0644'
            force: true

        - name: Add Docker's repository
          ansible.builtin.apt_repository:
            repo: 'deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
            state: present
            filename: docker

        - name: Install Docker
          ansible.builtin.apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
            state: present

        - name: Add eapreko to the docker group
          ansible.builtin.user:
            name: eapreko
            groups: docker
            append: true

    - name: Install Terraform
      tags:
        terraform
      block:
        - name: Install Terraform Prerequisites
          ansible.builtin.apt:
            name: "{{ item }}"
            state: present
          loop:
            - gnupg
            - software-properties-common

        - name: Download HashiCorp GPG key
          ansible.builtin.get_url:
            url: https://apt.releases.hashicorp.com/gpg
            dest: /usr/share/keyrings/hashicorp-archive-keyring.asc

        - name: Add HashiCorp repository
          ansible.builtin.apt_repository:
            repo: deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.asc] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main
            state: present
            filename: hashicorp

        - name: Install Terraform
          ansible.builtin.apt:
            name: terraform
            state: present

        # TODO: make autocomplete idempotent
        - name: Install Terraform autocomplete
          ansible.builtin.shell: |
            touch ~/.bashrc
            terraform -install-autocomplete

    # - name: Install Ansible
    #   block:
    #     - ansible.builtin.apt_repository:
    #         repo: deb [signed-by=/usr/share/keyrings/ansible-archive-keyring.gpg] http://ppa.launchpad.net/ansible/ansible/ubuntu {{ ansible_distribution_release }} main
    #         state: present
    #         filename: ansible
        
    #     - update_cache: yes

    #     - ansible.builtin.apt:
    #         name: ansible
    #         state: present

    - name: Upgrade Ansible-lint
      ansible.builtin.pip:
        name: ansible-lint
        state: latest

    - name: Install Linode-cli
      ansible.builtin.pip:
        name: "{{ item }}"
        state: latest
      loop:
        - linode-cli
        - boto3
        - botocore

    - name: Install Joplin notes app
      tags:
        joplin
      block:
        - name: Joplin - Install libfuse2
          ansible.builtin.apt:
            name: libfuse2
            state: present

        - name: Joplin - Install Joplin
          become_user: eapreko
          ansible.builtin.shell: |
            wget -O - https://raw.githubusercontent.com/laurent22/joplin/dev/Joplin_install_and_update.sh | bash

    - name: Add ansible-lint to PATH
      lineinfile:
        path: /home/eapreko/.bashrc
        line: 'export PATH=$PATH:/home/eapreko/.local/bin'

    - name: Purge rhythmbox, thunderbird and libreoffice installation
      ansible.builtin.apt:
        name: "{{ item }}"
        state: absent
      loop:
        - rhythmbox
        - 'thunderbird*'
        - 'libreoffice*'

